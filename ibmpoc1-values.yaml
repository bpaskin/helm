# Default values for ibmmq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This stanza describes the Queue Manager
#
# name: Queue Manager Name.  It is usually in UPPER case
# type: is the availability.  Valid valiues are: NativeHA, MultiInstance, SingleInstance
# version: version of IBM MQ that is available for the MQ Operator
# license: MQ License to use.  License: https://www.ibm.com/docs/en/ibm-mq/9.2?topic=mqibmcomv1beta1-licensing-reference
# resources:  the minimum and maximum CPU and memory to be used 
# storageclass: Which storage class to use.  NativeHa and Single can use ReadWriteOnce/ReadWriteMany.  MultiInstance must use ReadWriteMany 
# deletestorageclaim: Delete the Persisted Storage Claim after use (true/false).
queuemanager:
  name: IBMPOC1
  type: SingleInstance
  version: 9.2.3.0-r1
  license: L-RJON-BXUPZ2
  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 2
      memory: 4Gi
  storageclass: ibmc-block-gold
  deletestorageclaim: 'true'

# This stanza is the MQSC commands that will be entered into the QMGR. 
#
# All commands must be listed as a seperate item
mqsc: 
    - DEFINE QLOCAL('IBMPOC1.OUTQ') DEFPSIST(YES) REPLACE
    - DEFINE QLOCAL('IBMPOC1.INQ') DEFPSIST(YES) REPLACE
    - DEFINE CHANNEL('CLNT.TO.IBMPOC1') CHLTYPE(SVRCONN) TRPTYPE(TCP) SSLCAUTH(OPTIONAL) SSLCIPH('ANY_TLS12_OR_HIGHER') REPLACE
    - ALTER QMGR CHLAUTH (DISABLED)
    - REFRESH SECURITY(*)

# This stanza describes the keystore.
#
# to create a certificate, use the base64 command against the contents of a certificate file.
#
# key: this is the private key 
# crt: the public cert of the private key
certificates:
  key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRE9jT2NrV0hFVFIwc3QKWnIwVmdFK2lNVXk1NUg5a01pdGdzRGp4cFZwSXhvNFh3dzRuZ09NWUJ1NzhUU2YwY2F1b2l2MmUxR3loRjhkegpSWnFrc0tsYW03Q0JrOFFpNVlhY3NxVnk1R1p1MVJOTkZqOEVjY3NxUlFDQ3ZJRkM2TjFlOE5PR2ZLWnE4RStNCnJkUFY5VVRSd1E1Z1lEMGFPdGRJSGM2RThaa1lHVTF6M25PSjBWSDFXdGUzUU5FSlVDVHJoOXRPR1M2OGZ5NDAKUzVOcUc5UVQxRWQ5MnlQYXg0N2tvanVlQmZTWWRBR29ndTQvZWxyN0l4WGtidzA5bU5MRklIUUhkNHEvNklKeAphRkc3cEVWdlo5eDk3T0NlWktsRmRUblFwaXBabHQyaXdiZUZDcEpGQkRaaEYzTHZwblJzbWlvWGV5MkZzaUxyCkkxLzh4UDEvQWdNQkFBRUNnZ0VBQ0czcndqd3FRZE5EYXBNclhWbGo1d2VFVG9MYUFNbGJwQk1PQUMvMFE4eDMKdU5pcUYwclgrdjh0ZXZmYmpjdW1hcmRpSzc0WXdXc3JKYlhOM3JPbjlwOHMwZDJxd0pJR3NSZEtVaXFwVkJVMwpPSXFVQUNaMVdVQ0FDTmFSb0ozSmpEcmhLRGltd3U4VkVIVjRsTi95ODIyaW5LVFJXZVRWTFlpcUNodWpXS3g5CkNvUU9qeFpkZFFxV0xNbEtndFRQOGUxSTI2MmNUbVhzVzhhSWQ4dDVpWUZmcFc2OHpLTzZqSmRVWktpdnE2MkcKc3hqYnF5Kzk1SitqbzBLeWUybzN0M2NFempJUEk4L1hhRmllTlFFTUZtRWVlVzVSNE1iZ3VNblpocTBVV1BzSwpWdHE0Ukp2OW02aC9RWGlqMGVCY281Rnp2MFB5RHZtUFkrZWUwT1plQVFLQmdRRHBQUm9wanpMYjhFRnUzcnU2Cktyc1BNYzUvbUc4S1pmY0NGejdjSHRQdTJEQzZxTytpRXhkVk5xZ2h6ZGtLK05kalFGUGNmdlRQZXhCOWhsWUEKN0NtOE1QRkxSNUhNditFL3BSQm5UNzVLZHdhT2NjT21ibFNGSE1LSjhJVXZld3daaERhQWFFWlNmQld0TU9GdwpKa0FrTDdMTWxkL0Ixbk9LaDM5YmR1ZEpRUUtCZ1FEaWxsT3ZGVkVjaUxyM28yR1JzUnhIK1lMQkJjbUZpSEo2CngzQ1JNQjRPMldZMjJPYXpsZVJZUXdqdU1PS2xGNmNiR0VBR1JKaVRIbGo2MFE0cXVwbERrbVJTdWVJcnBRMTEKU3A1MnMranY3WXpZdFpxUG00UzFtaG9xcU1iRDg2V2VEZnp6RUIweWJPUk8xZW04NXRqZStoN3FvN0Y5QWUrSwplU29TUDduV3Z3S0JnQUpTQlV5Y2pCajhEdXFYZEs2cGRpcjBoK1ZsRXRXN3BmVnpYY0M2M2NqbWhiV1ZzS3lnCkcvOVJCK011TlJhUzJ6RzFsaC8vYzFnTkZXRHFVVGk1SU1FcWkzd0FQa2NYTVpwOGZlbEpOYzl2MTdUYkZPTTIKL2NoRlBQbzZWbGplbElROGVINVdpenlPMTNoZG9DQ0pnT0hiUjZBWmJaeDBFYm96RnVWR0RZOEJBb0dBUCs1QQpRRWNZY3ArVmVTZU04T2x5M0UvbTk0VWxmZHFveWtHWlhpMmdYWG96WDhoRkYyaDBXLzdWOXphdHkvem5kanFhClhlcGV6aXVpMlduQXdJZVRsTUFxTkRra09rSkFrTlp6N1hRSGhpS1ZPZFBMZnpkVzgxSStqY2kvQkN5cmp2UE4KYWRzakVjWXRpSnpNYlRNSS82aThybUZ2UTZFWE1BL05zZ1p1N2NzQ2dZRUFpN2RWYzhkNmNUUVFKR05HL0l4Vwo2d1dJN1U3V094OTNVTlFEZGVyQUhNeFRBMXRKbHdTRmtNUzYrWXAvZzU0K0tTQWZLTWw4eDVUTnRxM1lpUEdiCkozOGtVU2lxV2VudFYzeExMVmJMRTRUYXgxbkptK0ZFNDV4VWxwYjJyTU5kYjFuOFpOdkVrTTJsRElUMHBKOWUKU3EvWkZXMG1jSGdjVWRpdm93WHJLNVE9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K 
  crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lVR0tiaE5ZWXJMZVdqUFBVTlp5RldJTjJQWExRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZERVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQjRYRFRJd01ERXdOakV3TURjeU4xb1hEVE13TURFdwpNekV3TURjeU4xb3dGREVTTUJBR0ExVUVBd3dKYkc5allXeG9iM04wTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBem5EbkpGaHhFMGRMTFdhOUZZQlBvakZNdWVSL1pESXJZTEE0OGFWYVNNYU8KRjhNT0o0RGpHQWJ1L0UwbjlIR3JxSXI5bnRSc29SZkhjMFdhcExDcFdwdXdnWlBFSXVXR25MS2xjdVJtYnRVVApUUlkvQkhITEtrVUFncnlCUXVqZFh2RFRobnltYXZCUGpLM1QxZlZFMGNFT1lHQTlHanJYU0IzT2hQR1pHQmxOCmM5NXppZEZSOVZyWHQwRFJDVkFrNjRmYlRoa3V2SDh1TkV1VGFodlVFOVJIZmRzajJzZU81S0k3bmdYMG1IUUIKcUlMdVAzcGEreU1WNUc4TlBaalN4U0IwQjNlS3YraUNjV2hSdTZSRmIyZmNmZXpnbm1TcFJYVTUwS1lxV1piZApvc0czaFFxU1JRUTJZUmR5NzZaMGJKb3FGM3N0aGJJaTZ5TmYvTVQ5ZndJREFRQUJvMU13VVRBZEJnTlZIUTRFCkZnUVVIQlBGY0FyTy9ZUmxiZ0tobmkxSVdnS0Z5VEF3SHdZRFZSMGpCQmd3Rm9BVUhCUEZjQXJPL1lSbGJnS2gKbmkxSVdnS0Z5VEF3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBWkZ6SQpaLzZOay9TQmY0WXJHdVdNSzVjTTRLdldjWUdXQWlndTZ1TzZvV2VUVmdYamtGbE9GZ2RHRVhpSjFZNi9mRFBCCitaMVE0SERMYm1hbGE1aXRqeVhXbWFsRTFFOHR2bThGMDA5ZEFPL0oxUmNyS1VZcUFKbGJQNTZtbmt1QmtqZE0KYzAyMkhXOTd0RUpkYXViTlF2ZWJraDhZK1loUGVkV242ZmFtMVM1S2cwYUlVUWRKd0FuZDlCb2hLVkk3SHFFZgpoUktDYmJFZzNySXlSS0FLdk5DRXlvMjY4b3VIcll3Mi9WMEhMU0VnWEU3UTFxWTVKaXF6Y3Iyb0EvU2xZdGZwCnZYZFhKajA3OGJ1N3hrS2FxZkxpN3FTSzdjSVRjWjNWcldGOWZCbEh5MVV1K2V1NVNhN29udFR2MktON2Joc1QKNGczVTlMdWR2L01xTE5EWDVnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=

# This stana describes the truststore
# 
# to create a certificate, use the base64 command against the contents of a certificate file.
#
# certs is a list of base64 encode public keys to be trusted 
trust:
  certs:
      - LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lVR0tiaE5ZWXJMZVdqUFBVTlp5RldJTjJQWExRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZERVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQjRYRFRJd01ERXdOakV3TURjeU4xb1hEVE13TURFdwpNekV3TURjeU4xb3dGREVTTUJBR0ExVUVBd3dKYkc5allXeG9iM04wTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBem5EbkpGaHhFMGRMTFdhOUZZQlBvakZNdWVSL1pESXJZTEE0OGFWYVNNYU8KRjhNT0o0RGpHQWJ1L0UwbjlIR3JxSXI5bnRSc29SZkhjMFdhcExDcFdwdXdnWlBFSXVXR25MS2xjdVJtYnRVVApUUlkvQkhITEtrVUFncnlCUXVqZFh2RFRobnltYXZCUGpLM1QxZlZFMGNFT1lHQTlHanJYU0IzT2hQR1pHQmxOCmM5NXppZEZSOVZyWHQwRFJDVkFrNjRmYlRoa3V2SDh1TkV1VGFodlVFOVJIZmRzajJzZU81S0k3bmdYMG1IUUIKcUlMdVAzcGEreU1WNUc4TlBaalN4U0IwQjNlS3YraUNjV2hSdTZSRmIyZmNmZXpnbm1TcFJYVTUwS1lxV1piZApvc0czaFFxU1JRUTJZUmR5NzZaMGJKb3FGM3N0aGJJaTZ5TmYvTVQ5ZndJREFRQUJvMU13VVRBZEJnTlZIUTRFCkZnUVVIQlBGY0FyTy9ZUmxiZ0tobmkxSVdnS0Z5VEF3SHdZRFZSMGpCQmd3Rm9BVUhCUEZjQXJPL1lSbGJnS2gKbmkxSVdnS0Z5VEF3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBWkZ6SQpaLzZOay9TQmY0WXJHdVdNSzVjTTRLdldjWUdXQWlndTZ1TzZvV2VUVmdYamtGbE9GZ2RHRVhpSjFZNi9mRFBCCitaMVE0SERMYm1hbGE1aXRqeVhXbWFsRTFFOHR2bThGMDA5ZEFPL0oxUmNyS1VZcUFKbGJQNTZtbmt1QmtqZE0KYzAyMkhXOTd0RUpkYXViTlF2ZWJraDhZK1loUGVkV242ZmFtMVM1S2cwYUlVUWRKd0FuZDlCb2hLVkk3SHFFZgpoUktDYmJFZzNySXlSS0FLdk5DRXlvMjY4b3VIcll3Mi9WMEhMU0VnWEU3UTFxWTVKaXF6Y3Iyb0EvU2xZdGZwCnZYZFhKajA3OGJ1N3hrS2FxZkxpN3FTSzdjSVRjWjNWcldGOWZCbEh5MVV1K2V1NVNhN29udFR2MktON2Joc1QKNGczVTlMdWR2L01xTE5EWDVnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      - LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURyekNDQXBlZ0F3SUJBZ0lRQ0R2Z1ZwQkNSckdoZFdySldaSEhTakFOQmdrcWhraUc5dzBCQVFVRkFEQmgKTVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU1SR2xuYVVObGNuUWdTVzVqTVJrd0Z3WURWUVFMRXhCMwpkM2N1WkdsbmFXTmxjblF1WTI5dE1TQXdIZ1lEVlFRREV4ZEVhV2RwUTJWeWRDQkhiRzlpWVd3Z1VtOXZkQ0JEClFUQWVGdzB3TmpFeE1UQXdNREF3TURCYUZ3MHpNVEV4TVRBd01EQXdNREJhTUdFeEN6QUpCZ05WQkFZVEFsVlQKTVJVd0V3WURWUVFLRXd4RWFXZHBRMlZ5ZENCSmJtTXhHVEFYQmdOVkJBc1RFSGQzZHk1a2FXZHBZMlZ5ZEM1agpiMjB4SURBZUJnTlZCQU1URjBScFoybERaWEowSUVkc2IySmhiQ0JTYjI5MElFTkJNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0anZoRVhMZXFLVFRvMWVxVUtLUEMzZVF5YUtsN2hMT2xsc0IKQ1NETUFaT25UakMzVS9kRHhHa0FWNTNpalNMZGh3WkFBSUVKenM0Ymc3L2Z6VHR4UnVMV1pzY0ZzM1luRm85NwpuaDZWZmU2M1NLTUkydGF2ZWd3NUJtVi9TbDBmdkJmNHE3N3VLTmQwZjNwNG1WbUZhRzVjSXpKTHYwN0E2RnB0CjQzQy9keEMvL0FIMmhkbW9SQkJZTXFsMUdOWFJvcjVINGlkcTlKb3orRWtJWUl2VVg3UTZoTCtocWtwTWZUN1AKVDE5c2RsNmdTemVSbnR3aTVtM09GQnFPYXN2K3piTVVaQmZIV3ltZU1yL3k3dnJUQzBMVXE3ZEJNdG9NMU8vNApnZFc3alZnL3RSdm9TU2lpY05veEJOMzNzaGJ5VEFwT0I2anRTajFldFgramtNT3ZKd0lEQVFBQm8yTXdZVEFPCkJnTlZIUThCQWY4RUJBTUNBWVl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQTk1UU5WYlIKVEx0bThLUGlHeHZEbDdJOTBWVXdId1lEVlIwakJCZ3dGb0FVQTk1UU5WYlJUTHRtOEtQaUd4dkRsN0k5MFZVdwpEUVlKS29aSWh2Y05BUUVGQlFBRGdnRUJBTXVjTjZwSUV4SUsrdDFFbkU5U3NQVGZyZ1QxZVhrSW95UVkvRXNyCmhNQXR1ZFhIL3ZUQkgxakx1RzJjZW5Ubm1DbXJFYlhqY0tDaHpVeUltWk9Na1hEaXF3OGN2cE9wLzJQVjVBZGcKMDZPL25Wc0o4ZFdPNDFQMGptUDZQNmZidEdiZlltYlcwVzVCamZJdHRlcDNTcCtkV09JcldjQkFJKzB0S0lKRgpQbmxVa2lhWTRJQklxRGZ2OE5aNVlCYmVyT2dPelc2c1JCYzRMMG5hNFVVK0tyazJVODg2VUFiM0x1akVWMGxzCllTRVkxUVN0ZUR3c09vQnJwK3V2RlJUcDJJbkJ1VGhzNHBGc2l2OWt1WGNsVnpEQUd5U2o0ZHpwMzBkOHRiUWsKQ0FVdzdDMjlDNzlGdjFDNXFmUHJtQUVTcmNpSXhwZzBYNDBLUE1icDFaV1ZiZDQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      - LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVsRENDQTN5Z0F3SUJBZ0lRQWYyajYyN0tkY2lJUTR0eVM4KzhrVEFOQmdrcWhraUc5dzBCQVFzRkFEQmgKTVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU1SR2xuYVVObGNuUWdTVzVqTVJrd0Z3WURWUVFMRXhCMwpkM2N1WkdsbmFXTmxjblF1WTI5dE1TQXdIZ1lEVlFRREV4ZEVhV2RwUTJWeWRDQkhiRzlpWVd3Z1VtOXZkQ0JEClFUQWVGdzB4TXpBek1EZ3hNakF3TURCYUZ3MHlNekF6TURneE1qQXdNREJhTUUweEN6QUpCZ05WQkFZVEFsVlQKTVJVd0V3WURWUVFLRXd4RWFXZHBRMlZ5ZENCSmJtTXhKekFsQmdOVkJBTVRIa1JwWjJsRFpYSjBJRk5JUVRJZwpVMlZqZFhKbElGTmxjblpsY2lCRFFUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFOeXVXSkJOd2NRd0ZaQTFXMjQ4Z2hYMUxGeTk0OXYvY1VQNlpDV0ExTzRZb2szd1p0QUtjMjRSbURZWFpLODMKbmYzNlFZU3Z4NitNL2hwelRjOHpsNUNpbG9kVGd5dTVwblZJTFIxV04zdmFNVElhMTZ5ckJ2U3FYVXUzUjBiZApLcFBEa0M1NWdJRHZFd1JxRkR1MW01Syt3Z2RsVHZ6YS9QOTZydHhjZmxVeERPZzVCNlRYdmkvVEMyclNzZDlmCi9sZDBVenMxZ04ydWprU1lzNThPMDlyZzEvUnJLYXRFcDB0WWhHMlNTNEhEMm5PTEVwZElrQVJGZFJyZE56R1gKa3VqTlZBMDc1TUUvT1Y0dXVQTmNmaENPaGtFQWpVVm1SN0NoWmM2Z3Fpa0pUdk9YNitndXF3OXlwekFPK3NmMAovUlIzdzZSYktGZkNzL21DL2JkRldKc0NBd0VBQWFPQ0FWb3dnZ0ZXTUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDCkFRQXdEZ1lEVlIwUEFRSC9CQVFEQWdHR01EUUdDQ3NHQVFVRkJ3RUJCQ2d3SmpBa0JnZ3JCZ0VGQlFjd0FZWVkKYUhSMGNEb3ZMMjlqYzNBdVpHbG5hV05sY25RdVkyOXRNSHNHQTFVZEh3UjBNSEl3TjZBMW9ET0dNV2gwZEhBNgpMeTlqY213ekxtUnBaMmxqWlhKMExtTnZiUzlFYVdkcFEyVnlkRWRzYjJKaGJGSnZiM1JEUVM1amNtd3dONkExCm9ET0dNV2gwZEhBNkx5OWpjbXcwTG1ScFoybGpaWEowTG1OdmJTOUVhV2RwUTJWeWRFZHNiMkpoYkZKdmIzUkQKUVM1amNtd3dQUVlEVlIwZ0JEWXdOREF5QmdSVkhTQUFNQ293S0FZSUt3WUJCUVVIQWdFV0hHaDBkSEJ6T2k4dgpkM2QzTG1ScFoybGpaWEowTG1OdmJTOURVRk13SFFZRFZSME9CQllFRkErQVlSeUNNV0hWTHlqbmpVWTR0Q3poCnh0bmlNQjhHQTFVZEl3UVlNQmFBRkFQZVVEVlcwVXk3WnZDajRoc2J3NWV5UGRGVk1BMEdDU3FHU0liM0RRRUIKQ3dVQUE0SUJBUUFqUHQ5TDBqRkNwYlorUWx3YVJNeHAwV2kwWFV2Z0JDRnNTK0p0ekxIZ2w0K21Vd25OcWlwbAo1VGxQSG9PbGJseVlvaVFtNXZ1aDdaUEhMZ0xHVFVxL3NFTGZlTnF6cVBsdC95R0ZVelpnVEhiTzdEamMxbEdBCjhNWFc1ZFJOSjJTcm04YytjZnRJbDdnemJja1RCKzZXb2hzWUZmWmNURUR0czhMcy8zSEI0MGYvMUxrQXREZEMKMmlESjZtNks3aFFHcm4yaVdaaUlxQnR2TGZUeXlSUmZKczhzalg3dE44Q3AxVG01Z3I4WkRPbzByd0FoYVBpdApjK0xKTXRvNEpRdFYwNW9kOEdpRzdTNUJOTzk4cFZBZHZ6cjUwOEVJRE9idEhvcFlKZVM0ZDYwdGJ2VlMzYlIwCmo2dEpMcDA3a3pRb0gzak9sT3JIdmRQSmJSemVYREx6Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      - LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUlDVENDQnZHZ0F3SUJBZ0lRQ2drbDI5ZGlpK3RiWVlaZUpJeklsekFOQmdrcWhraUc5dzBCQVFzRkFEQk4KTVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU1SR2xuYVVObGNuUWdTVzVqTVNjd0pRWURWUVFERXg1RQphV2RwUTJWeWRDQlRTRUV5SUZObFkzVnlaU0JUWlhKMlpYSWdRMEV3SGhjTk1qQXdOakF4TURBd01EQXdXaGNOCk1qSXdPVEEwTURBd01EQXdXakNCbXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFVEFQQmdOVkJBZ1RDRWxzYkdsdWIybHoKTVJNd0VRWURWUVFIRXdwU2FYWmxjbmR2YjJSek1Sa3dGd1lEVlFRS0V4QkVSbE1nVTJWeWRtbGpaWE1nVEV4RApNU0F3SGdZRFZRUUxFeGRXYjJsalpTQmhibVFnUkdGMFlTQlRaWEoyYVdObGN6RW5NQ1VHQTFVRUF4TWVaQzEyClpITXVjbmN1WkdselkyOTJaWEptYVc1aGJtTnBZV3d1WTI5dE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0MKQVE4QU1JSUJDZ0tDQVFFQWxKaEc2THRhWGpCSnZXbjh4UzgveHplc3crM1pZLy94cGhvbVNrTk5Ed0xQN21LUwo4Y0NTU0d5RlVNSTNoUTJmV2JMWW1yYlBkQWhHQzhmU0NJRmErQ2tYU2FMMlNKN3QzelgxcitFbXR5Ui9PcExJCklCN2ZjTlF4L2ZHM3ViK3MvWkhKb0drTnVEQ1QyMlF3SlJaa3k0ZWlzYW1SWmZNUmk1a0NrMVZuWVlKTHhDSzgKbWFZWmV4c3Y1Qnl1ZEEwM05xekNiMW5uYjFvYkhScU15ZS9LR2pxeFUreSt0RUgvUUJ3ZWF6RFJrQmtFRFpvTAp1aHRBbXdBRDBPSXR4OTFYaWhXV3lPZnRVc3gxUnQvamtvUEFGRU9XVWI3VWVPUzRBcXAveUozRElVTDZCeXVMCnFLcTBWQlc0VmhPS3BFUWtleExWUTg3VittZExVL01qTVlKNkRRSURBUUFCbzRJRWxEQ0NCSkF3SHdZRFZSMGoKQkJnd0ZvQVVENEJoSElJeFlkVXZLT2VOUmppMExPSEcyZUl3SFFZRFZSME9CQllFRk5PV1JWejB4QU5ybXNXQwpZcmtpODB2OFZxT2ZNSUhjQmdOVkhSRUVnZFF3Z2RHQ0cyUXRkbVJ6TG1ScGMyTnZkbVZ5Wm1sdVlXNWphV0ZzCkxtTnZiWUlqZG1Oc1pEQXdNemd4TlM1eWR5NWthWE5qYjNabGNtWnBibUZ1WTJsaGJDNWpiMjJDSTNaamJHUXcKTURNNE1UWXVjbmN1WkdselkyOTJaWEptYVc1aGJtTnBZV3d1WTI5dGdpTjJZMnhrTURBNU9EWTNMbkozTG1ScApjMk52ZG1WeVptbHVZVzVqYVdGc0xtTnZiWUlqZG1Oc1pEQXdPVGcyT0M1eWR5NWthWE5qYjNabGNtWnBibUZ1ClkybGhiQzVqYjIyQ0htUXRkbVJ6TG5KM0xtUnBjMk52ZG1WeVptbHVZVzVqYVdGc0xtTnZiVEFPQmdOVkhROEIKQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Hc0dBMVVkSHdSawpNR0l3TDZBdG9DdUdLV2gwZEhBNkx5OWpjbXd6TG1ScFoybGpaWEowTG1OdmJTOXpjMk5oTFhOb1lUSXRaell1ClkzSnNNQytnTGFBcmhpbG9kSFJ3T2k4dlkzSnNOQzVrYVdkcFkyVnlkQzVqYjIwdmMzTmpZUzF6YUdFeUxXYzIKTG1OeWJEQk1CZ05WSFNBRVJUQkRNRGNHQ1dDR1NBR0cvV3dCQVRBcU1DZ0dDQ3NHQVFVRkJ3SUJGaHhvZEhSdwpjem92TDNkM2R5NWthV2RwWTJWeWRDNWpiMjB2UTFCVE1BZ0dCbWVCREFFQ0FqQjhCZ2dyQmdFRkJRY0JBUVJ3Ck1HNHdKQVlJS3dZQkJRVUhNQUdHR0doMGRIQTZMeTl2WTNOd0xtUnBaMmxqWlhKMExtTnZiVEJHQmdnckJnRUYKQlFjd0FvWTZhSFIwY0RvdkwyTmhZMlZ5ZEhNdVpHbG5hV05sY25RdVkyOXRMMFJwWjJsRFpYSjBVMGhCTWxObApZM1Z5WlZObGNuWmxja05CTG1OeWREQU1CZ05WSFJNQkFmOEVBakFBTUlJQjl3WUtLd1lCQkFIV2VRSUVBZ1NDCkFlY0VnZ0hqQWVFQWRRQXBlYjd3bmprNUlmQldjNTlqcFhmbHZsZDluR0FLK1BsTlhTWmNKVjNIaEFBQUFYSngKME16UUFBQUVBd0JHTUVRQ0lFeWhxTEZhL3BadWdyakh2NTNXNDk5bWNYdGpudDN2ZUx3aXV1azRLQnBUQWlBUQpsZytRdU1zbmhkU3JsNDZuY3NsWWtHTktKRzhNVU9DQW5la1duOVlMWGdCM0FDSkZSUWRaVlNSV2xqK2hML0gzCmJZYmdJeVpqcmNCTGYxM0dnMXh1NGc4Q0FBQUJjbkhRek93QUFBUURBRWd3UmdJaEFQcU5KRjI1OE1aRXFkMlcKV2poSGtjdG5oMmplRTJuUFcybTAvTXh6NFZLYkFpRUFyN2dDWXNOSnRYcnBYVjdrOTBrZ1Y2bkpHaU1NaUtuRQpKd3JkZ1hEQ1pwZ0Fkd0JSbzdEMS9RRjVuRlp0dURkNGp3eWtlc3diSjh2M25vaENtZzMrMUlzRjVRQUFBWEp4CjBNMDhBQUFFQXdCSU1FWUNJUURWMk12Rjd1YlZSS0lHRmVWUjZHR29GYnhmK3YzcHo1TVB3eUZwcjZTeEVBSWgKQU9KRFEyNHRRNlBUWnFXaFVKZ0lEUnhKeHg5djRyeDRlcnd5TlpmR2RlNGpBSFlBUWNqS3NkOGlSa29ReHFFNgpDVUtIWGs0eGl4c0Q2K3RMeDJqd2tHS1dCdllBQUFGeWNkRE1qd0FBQkFNQVJ6QkZBaUVBdW5nenp2N0VDbzRUClBvTmpsK0t2S2pUa1NLTUJ5SVZMbnVKWk80d1RyYllDSUNQMkJzTzc0MjdHQXM3N0V2eC92dm83SWNkdVQxRlkKdzRTNGJ6aG90aUt1TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCZGVNMCtsUHl1MHpabU9NSmxzckQ5NEVtUgo0VnBnNUxrelN1Ymo1UlRUVjROUll4REtVMTZEWmtXY0xQeFF4U05xTzZ2U0FLbmlKV1NZdXN1dTJhWG1nVlhBClJNNnhOREdQRGdHbWNsKzIxVERrVFN1bFcvdDNiVkQyTExTZmpOYnBQcEcvWVZKT3lMTzhkQ3d5amQ4Zzl6SDQKbGtxa1llZkhTWVlDU2pQRExGRi9xUlRFTTR0bHdYb0hWNnFrUm9nSUE0eElNNWNHaXltVmViTWRQS25HMEk3LwpnOE5OWmZFWDAwdkxTeGk4anNUdUl6cldKMFhGK1Y3WTFlcnU3QTd0Wm4yQStDVFcrUGZyMEdqNHlZOFZ1dVU4CmpVOHRZZ3RPbFJyVUN1TlNrMHVzQWpaUzlyaHlqZ0ZROTc1NGhsUE1QK3R4ZjFwNEJCQUUxUG5xdHJWZwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==

# This stanza describes the channels to be published externally
#
# channels: a List of the name of the channel, but using the SNI of the channel.  To format it see: https://www.ibm.com/support/pages/ibm-websphere-mq-how-does-mq-provide-multiple-certificates-certlabl-capability
external:
  channels:
    - clnt2e-to2e-ibmpoc1
